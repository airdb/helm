apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mychart.fullname" . }}
  labels:
    {{- include "mychart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mychart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mychart.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "mychart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config
          configMap:
            name: nginx-config
        - name: test-volume
          hostPath:
            path: /data
            # this field is optional
            type: Directory
        - name: uptime
          hostPath:
            path: /var/lib/lxcfs/proc/uptime
            type: File
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: {{ .Values.workdir }}
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - mountPath: /proc/uptime
              name: uptime

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: AIRDB
              value: "Hello from the environment"
            - name: DATABASE
              value: {{ printf "mysql://%s:%s@%s:%s/%scharset=utf8&parseTime=True&loc=Local" .Values.database.user .Values.database.password .Values.database.host .Values.database.port .Values.database.dbname }}
              #value: {{ printf "111%s" "mysql://{{ .Values.database.user }}:{{ .Values.database.password}}@{{ .Values.database.host }}:{{ .Values.database.port }}?database={{ .Values.database.dbname }}?charset=utf8&parseTime=True&loc=Local" }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
